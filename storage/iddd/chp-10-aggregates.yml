---

- question: |
    How do you protect against invariants so that an Entity is not peristed
    which is older than the one currenly peristed?
  answer: Use a version number and reject updates that are older
  tags: []

- question: What are issues with large-cluster Aggregates?
  answer: |
    - False invariants/constraints imposed by the developers
    - Transactional issues
    - Performance and scalability issues
  tags: []

- question: How do you discover which objects should be in an Aggregate?
  answer: By determining what a model's true invariants are?
  tags: []

- question: What is an invariant?
  answer: |
    It is a business rule that must be transactionally consistent
    (as opposed to eventually consisten) i.e. atomic and immediate
  tags: []

- question: What does an aggregate double as?
  answer: A transactional consistency boundary
  tags: []

- question: Why is transactional analysis useful when designing aggregates
  answer: Because you cannot correctly reason about aggregate design without it
  tags: []

- question: What is the definition of a properly designed aggregate?
  answer: |
    One that can be modified in any way required by the business while
    maintaining single transaction invariant consistency
  tags: []

- question: Describe examples of large cluster aggregates
  answer: answers will vary
  tags: []

- question: How do object graphs play into aggregates?
  answer: |
    Aggregates are chiefly about consistency boundaries so object graphs
    are not their primary concern.
  tags: []

- question: Describe a small aggregate
  answer: |
    Limit the aggregate to only necessary entities, attributes, and values.
    A starting minimum is a root entity, minimum number of attributes,
    and or value type properties.
  tags: []

- question: What are necessary elements of an Aggregate?
  answer: |
    Those that must be consistent with the others even if domain experts
    don't specify them as such.
  tags: []

- question: What are questions to ask about the persistence of multiple aggregates?
  answer: |
    If the persistence of multiple aggregates is confined to one transaction, be skeptical
  tags: []

- question: If you're trying to keep multiple aggregates consistent what might that indicate?
  answer: An invariant was missed
  tags: []

- question: |
    If limiting a model to referencing aggregates only by ID causes performance issues,
    what are potential resolutions?
  answer: Theta joins, CQRS, strike a balance between inferred and direct object reference
  tags: []

- question: |
    What is one pattern to implement eventual consistency
    between the origin aggregate and others?
  answer: Domain Events (pub sub/Observer)
  tags: []

- question: What is a good strategy to retry failed Domain Events?
  answer: |
    Capped Exponential Backoff where you exponentially backoff on
    retries while capping waits with an upper limit.
  tags: []

- question: How would you break up large aggregate clusters?  Examples?
  answer: answer will vary
  tags: []
