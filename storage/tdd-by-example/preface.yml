---

- question: Why should you write clean code that works through TDD?
  answer: |
    * It's a predictable way to develop since you know when you're finished
    * It gives you a chance to learn all of the lessons that the code can teach you
    * It improves the user experience
    * It lets your teammates count on you
    * It feels good to write it
  tags: []

- question: What are the rules of TDD?
  answer: |
    * Write new code (behavior) only if an automated test has failed
    * Eliminate duplication
  tags: []

- question: How does TDD change the development lifecycle?
  answer: |
    * Developers design the code as they go.  No big upfront design.
      The design evolves organically as you progress through the code
    * Developers write their own tests
    * Developers must write code that is highly-cohesive and loosely coupled.
  tags: []

- question: What are the 3 stages of TDD?
  answer: |
    * Red: failing/not even compiling spec
    * Green: commit sins and or hacks/hard coding to get it to work
    * Refactor: to a better solution and eliminate duplication
  tags: []

- question: How does TDD change the developer's relationship with outside collaborators and processes?
  answer: |
    * QA can be proactive instead of reactive given reduced defect density
    * Project managers can estimate accurately and involve customers daily since nasty surprises will be
      limited
    * Software developers can collaborate by the minute instead of daily or weekly given clearer technical conversations
    * Software is shippable everyday since the build is always green
  tags: []

- question: How should one manage fear during development?
  answer: |
    TDD helps manage fear through:

    * Start learning concretely as quickly as possible when given a difficult situation
    * Communicate more clearly
    * Search out helpful, concrete feedback
  tags: []

- question: When the problem gets tougher, how should the tests change?
  answer: They should cover less ground
  tags: []

- question: What is TDD philosophically?
  answer: |
    It is an awareness of the gap between decision and feedback and techniques
    to control that gap
  tags: []

