---

- question: When does Elixir mutate data?
  answer: Never.  It's a functional language
  tags: []

- question: How does assignment work in Elixir?
  answer: It doesn't.  There is no assignment.  `=` is for matching.
  tags: []

- question: What is the `irb` equivalent in Elixir?
  answer: `iex`
  tags: []

- question: What are the three things to Elixir programs?
  answer: |
    * data, modules, processes
    * data: numbers, strings, functions, etc
    * modules: groupings of functions and data structures
    * processes:
  tags: []

- question: What is considered data in Elixir?
  answer:  numbers, strings, lists, maps, functions, etc.
  tags: []


- question: What are modules in Elixir?
  answer: They are containers for functions and data structures
  tags: []

- question: What is a process in Ruby?
  answer: They are where the code runs and where state lives
  tags: []

- question: What are the advantages of immutability of Elixir data?
  answer: |
    It allows for a powerful concurrent programming model.
  tags: []

- question: How do strings differ between Ruby and Elixir?
  answer: |
    'string' and "string" are essentially the same in Ruby whereas 'string' in
    Elixir represents a `charlist`

    Elixir utilizes UTF-8 strings.   Multiline strings are denoted by `"""`
  tags: []

- question: What are Atoms in Elixir?
  answer: |
    They are similar to symbols in Ruby, however, they are more performant
    and they are stored in a table that is not garbage collected.  Just as in Ruby,
    do not create Atoms from user input.
  tags: []
